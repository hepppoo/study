セキュリティの制約（クロスドメイン制約）で、JavaScriptから異なるドメインに通信できない点に注意する。
このため、サンプルでも一旦サーバサイド（PHP）でWebAPIにアクセスした上で、JavaScriptあkらはこの.phpファイルに対して通信している。
proxy.phpはWeb APIから得た結果をそのまま出力するだけの、いわゆるブロキシ（代理）。
.phpにアクセスしている部分についても注目。
$.getメソッドによる遊しんの結果を処理するのはそれぞれメソッドチェーンで連結されて表8.1の役割

表　非同期通信の結果を処理するメソッド。

done(fn(data, status, jqXHR))
    Ajax通信の成功時に実行される関数fnを指定
fail(fn(jqXHR,status,err))
    Ajax通信の失敗時に実行される関数fnを指定
always(fn(jqXHR, status))
    Ajax通史の成功・失敗にかかわらず、完了時に実行される関数fnを指定（今回は未使用）


jqXHRオブジェクトは、JavaScript固有の機能を追加したXMLHttpRequest(Ajax通信)オブジェクト。
Ajax通信の細部をアプリ側から制御したい場合に利用する。
結果データdataには、通信先の出力（この場合であれば、郵便番号検索APIの結果XML）が格納される

結果データは、$(セレクタ, data)の形式で検索できる。

HTTP POST対応には$.postメソッド
$.getメソッドは、正確にはHTTP GETを利用して通信するためのメソッド。
単にページを要求する場合、データを送信するにしても短いデータの場合に利用する。
大きなデータを送信したい場合には、HTTP POSTで通信するための$.postメソッドを利用する
（構文は$.getと共通）
